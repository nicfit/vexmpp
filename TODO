TODO
----
- make raise_on_error deafult to True
- tests resolveHostPort caching

Botch:
    - Log level command Comand API
    ~ xmpp commands
      x new xmpp.py module
      x presence
      - msg
    ~ admins commands
      x subcommands for each of the existing
      - config save
      - acl add
      - acl remove
    - muc commands
      - say
      - join [room] (follow by default)
    - triggers for reacting to seen text
    - Muc link trigger
      - Stores in DB
      - Kicks reposts
    - Config-less startup
      - ~/.botch/config.ini (default)

- Important
   x DiscoMixin needs to be more resilnant to errors (not leak the XmppError)
     See tigace.im login
   - Ability to do TLS with immediate handshake (443, 5223, etc.)
   - Remove callback methods that are not async (connectionFailed is the
     same as the exceptions raised by ClientStream.connect, e.g.). Rethink...
     use asyncio.Event???
   - timeouts in protocol functions
   - login-stress
     - Multi-proc
     - Abstract login strategy for different implementations
   - Application signal handers, might help cancelling pending tasks (cleanup)
   - Disco support... particularly when a mixin is constructed and added to 
     a stream the streams DiscoMixin/map should be updated to reflect that
     the new mixin is suported (jabber:iq:version, etc.)

- Useful
   - SSL Context options, lock down, cert vaildation, etc.
   - Allow "by" attributes on stanza errors.
   ~ bind errors
   - jabber:iq:register via stream:feature (not legacy)

- Meh
   - jabber:iq:auth via stream:feature (not legacy)
          

Public Servers
---------------
   - jabber.iitsp.com - Openfire  (web registration)
   - lightwitch.org - Metronome   (web registration)
